ARG IMAGE_REPOSITORY
# pull official base image
FROM ${IMAGE_REPOSITORY}${IMAGE_REPOSITORY_DIVISION}node:13.12.0-alpine

# See https://stackoverflow.com/questions/29261811/use-docker-compose-env-variable-in-dockerbuild-file
# ARG PROXY_USER
# ARG PROXY_PASSWORD
# ARG PROXY_FQDN
# ARG PROXY_PORT

# ENV HTTP_PROXY="http://${PROXY_USER}:${PROXY_PASSWORD}@${PROXY_FQDN}:${PROXY_PORT}"
# ENV HTTPS_PROXY="http://${PROXY_USER}:${PROXY_PASSWORD}@${PROXY_FQDN}:${PROXY_PORT}"

# set working directory
WORKDIR /app

# add `/app/node_modules/.bin` to $PATH
ENV PATH /app/node_modules/.bin:$PATH

# install app dependencies
COPY package.json ./
COPY package-lock.json ./
COPY .npmrc ./

# cross-env requires global install
RUN npm install cross-env -g --useconfig npmrc

RUN npm install --silent --useconfig npmrc
# RUN npm install react-scripts@3.4.1 -g --silent --useconfig npmrc

# add app
COPY . ./

# Allow cross-env permission
RUN chmod -R a+x node_modules

# expose port
EXPOSE 8080

# start app
CMD ["npm", "start"]
